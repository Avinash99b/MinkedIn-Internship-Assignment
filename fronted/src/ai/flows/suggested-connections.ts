// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A Genkit flow that suggests potential connections to a user
 * based on their profile data and activity.
 *
 * - suggestedConnections - A function that returns connection suggestions for a user.
 * - SuggestedConnectionsInput - The input type for the suggestedConnections function.
 * - SuggestedConnectionsOutput - The return type for the suggestedConnections function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestedConnectionsInputSchema = z.object({
  userProfile: z
    .string()
    .describe(
      'A string containing the user profile data, including skills, experience, and industry.'
    ),
  userActivity: z
    .string()
    .describe(
      'A string containing the user activity data, including posts, articles, and shared content.'
    ),
  numberOfSuggestions: z
    .number()
    .default(5)
    .describe('The number of connection suggestions to return.'),
});
export type SuggestedConnectionsInput = z.infer<
  typeof SuggestedConnectionsInputSchema
>;

const SuggestedConnectionsOutputSchema = z.object({
  suggestions: z
    .array(z.string())
    .describe('An array of suggested connections based on user profile and activity.'),
});
export type SuggestedConnectionsOutput = z.infer<
  typeof SuggestedConnectionsOutputSchema
>;

export async function suggestedConnections(
  input: SuggestedConnectionsInput
): Promise<SuggestedConnectionsOutput> {
  return suggestedConnectionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestedConnectionsPrompt',
  input: {schema: SuggestedConnectionsInputSchema},
  output: {schema: SuggestedConnectionsOutputSchema},
  prompt: `You are an AI assistant designed to suggest potential connections for users on a professional networking platform.

  Based on the user's profile data and activity, identify users who would be valuable additions to their network.

  Profile Data: {{{userProfile}}}
  Activity Data: {{{userActivity}}}

  Suggest {{numberOfSuggestions}} connections and return them as an array of strings.
  Do not suggest the current user as a connection.
  Each suggested connection should be a person's full name.
  Do not include any additional information beyond the names.`,
});

const suggestedConnectionsFlow = ai.defineFlow(
  {
    name: 'suggestedConnectionsFlow',
    inputSchema: SuggestedConnectionsInputSchema,
    outputSchema: SuggestedConnectionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
